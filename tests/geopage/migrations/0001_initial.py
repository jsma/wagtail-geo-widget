# Generated by Django 4.2.23 on 2025-08-14 04:41

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0094_alter_page_locale"),
    ]

    operations = [
        migrations.CreateModel(
            name="ClassicGeoPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("address", models.CharField(blank=True, max_length=250, null=True)),
                ("location", models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ClassicGeoPageWithLeaflet",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True,
                        help_text="Search powered by MapBox",
                        max_length=250,
                        null=True,
                    ),
                ),
                ("location", models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ClassicGeoPageWithLeafletAndZoom",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True,
                        help_text="Search powered by Nominatim",
                        max_length=250,
                        null=True,
                    ),
                ),
                ("location", models.CharField(blank=True, max_length=250, null=True)),
                ("zoom", models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ClassicGeoPageWithZoom",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("address", models.CharField(blank=True, max_length=250, null=True)),
                ("location", models.CharField(blank=True, max_length=250, null=True)),
                ("zoom", models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="GeoLocation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("address", models.CharField(blank=True, max_length=250, null=True)),
                ("zoom", models.SmallIntegerField(blank=True, null=True)),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GeoLocationWithLeaflet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "address",
                    models.CharField(
                        blank=True,
                        help_text="Search powered by Nominatim",
                        max_length=250,
                        null=True,
                    ),
                ),
                ("zoom", models.SmallIntegerField(blank=True, null=True)),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GeoPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("address", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="GeoPageWithLeaflet",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True,
                        help_text="Search powered by Nominatim",
                        max_length=250,
                        null=True,
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="GeoPageWithPlacesNewGeocoder",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("address", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="GeoStreamPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            ("map", 0),
                            ("map_with_leaflet", 1),
                            ("map_struct", 4),
                            ("map_struct_with_deprecated_geocoder_places", 6),
                            ("map_struct_with_geocoder_places_new", 8),
                            ("map_struct_with_leaflet", 10),
                            ("map_struct_with_zoom", 13),
                            ("map_struct_leaflet_with_zoom", 15),
                        ],
                        block_lookup={
                            0: ("wagtailgeowidget.blocks.GoogleMapsBlock", (), {}),
                            1: ("wagtailgeowidget.blocks.LeafletBlock", (), {}),
                            2: (
                                "wagtailgeowidget.blocks.GeoAddressBlock",
                                (),
                                {"required": True},
                            ),
                            3: (
                                "wagtailgeowidget.blocks.GoogleMapsBlock",
                                (),
                                {"address_field": "address"},
                            ),
                            4: (
                                "wagtail.blocks.StructBlock",
                                [[("address", 2), ("map", 3)]],
                                {"icon": "user"},
                            ),
                            5: (
                                "wagtailgeowidget.blocks.GeoAddressBlock",
                                (),
                                {"geocoder": "google_maps_places", "required": True},
                            ),
                            6: (
                                "wagtail.blocks.StructBlock",
                                [[("address", 5), ("map", 3)]],
                                {"icon": "user"},
                            ),
                            7: (
                                "wagtailgeowidget.blocks.GeoAddressBlock",
                                (),
                                {
                                    "geocoder": "google_maps_places_new",
                                    "required": True,
                                },
                            ),
                            8: (
                                "wagtail.blocks.StructBlock",
                                [[("address", 7), ("map", 3)]],
                                {"icon": "user"},
                            ),
                            9: (
                                "wagtailgeowidget.blocks.LeafletBlock",
                                (),
                                {"address_field": "address"},
                            ),
                            10: (
                                "wagtail.blocks.StructBlock",
                                [[("address", 2), ("map", 9)]],
                                {"icon": "user"},
                            ),
                            11: (
                                "wagtailgeowidget.blocks.GeoZoomBlock",
                                (),
                                {"required": False},
                            ),
                            12: (
                                "wagtailgeowidget.blocks.GoogleMapsBlock",
                                (),
                                {"address_field": "address", "zoom_field": "zoom"},
                            ),
                            13: (
                                "wagtail.blocks.StructBlock",
                                [[("address", 2), ("zoom", 11), ("map", 12)]],
                                {"icon": "user"},
                            ),
                            14: (
                                "wagtailgeowidget.blocks.LeafletBlock",
                                (),
                                {"address_field": "address", "zoom_field": "zoom"},
                            ),
                            15: (
                                "wagtail.blocks.StructBlock",
                                [[("address", 2), ("zoom", 11), ("map", 14)]],
                                {"icon": "user"},
                            ),
                        },
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="GeoPageWithPlacesNewGeocoderRelatedLocations",
            fields=[
                (
                    "geolocation_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="geopage.geolocation",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_locations",
                        to="geopage.geopagewithplacesnewgeocoder",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
            bases=("geopage.geolocation", models.Model),
        ),
        migrations.CreateModel(
            name="GeoPageWithLeafletRelatedLocations",
            fields=[
                (
                    "geolocationwithleaflet_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="geopage.geolocationwithleaflet",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_locations",
                        to="geopage.geopagewithleaflet",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
            bases=("geopage.geolocationwithleaflet", models.Model),
        ),
        migrations.CreateModel(
            name="GeoPageRelatedLocations",
            fields=[
                (
                    "geolocation_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="geopage.geolocation",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_locations",
                        to="geopage.geopage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
            bases=("geopage.geolocation", models.Model),
        ),
    ]
